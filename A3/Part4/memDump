--------------------------------------------------------------------------------
Command:            prog
Massif arguments:   (none)
ms_print arguments: massif.out.23070
--------------------------------------------------------------------------------


    MB
4.883^                                                                       #
     |                  :::::::::::::::::::::::::::::::::::::::::::::::::::::#
     |                  :                                                    #
     |                  :                                                    #
     |                  @                                                    #
     |                  @                                                    #
     |                  @                                                    #
     |                  @                                                    #
     |                  @                                                    #
     |                  @                                                    #
     |                  @                                                    #
     |    ::::::::::::::@                                                    #
     |    :             @                                                    #
     |    :             @                                                    #
     |    :             @                                                    #
     |    @             @                                                    #
     | :::@             @                                                    #
     | :  @             @                                                    #
     |:@  @             @                                                    #
     |@@  @             @                                                    #
   0 +----------------------------------------------------------------------->Gi
     0                                                                   122.1

Number of snapshots: 89
 Detailed snapshots: [2, 4, 6, 8, 11, 12, 16, 24, 28, 33, 38, 43, 46 (peak), 57, 67, 77, 87]

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
  0              0                0                0             0            0
  1        200,695           39,640           23,784        15,856            0
  2      6,243,094           40,120           24,072        16,048            0
60.00% (24,072B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->59.82% (24,000B) 0x400761: _addLinkBefore (linkedList.c:71)
| ->59.82% (24,000B) 0x400A36: addBackList (linkedList.c:194)
|   ->59.82% (24,000B) 0x400C0E: addList (linkedList.c:275)
|     ->59.82% (24,000B) 0x400DD9: main (linkedListMain.c:22)
|       
->00.18% (72B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
  3      6,523,168           77,760           46,656        31,104            0
  4     30,600,256           80,120           48,072        32,048            0
60.00% (48,072B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->59.91% (48,000B) 0x400761: _addLinkBefore (linkedList.c:71)
| ->59.91% (48,000B) 0x400A36: addBackList (linkedList.c:194)
|   ->59.91% (48,000B) 0x400C0E: addList (linkedList.c:275)
|     ->59.91% (48,000B) 0x400DD9: main (linkedListMain.c:22)
|       
->00.09% (72B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
  5     31,161,798          156,000           93,600        62,400            0
  6    127,311,475          160,120           96,072        64,048            0
60.00% (96,072B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->59.96% (96,000B) 0x400761: _addLinkBefore (linkedList.c:71)
| ->59.96% (96,000B) 0x400A36: addBackList (linkedList.c:194)
|   ->59.96% (96,000B) 0x400C0E: addList (linkedList.c:275)
|     ->59.96% (96,000B) 0x400DD9: main (linkedListMain.c:22)
|       
->00.04% (72B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
  7    128,432,554          311,160          186,696       124,464            0
  8    512,730,921          320,120          192,072       128,048            0
60.00% (192,072B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->59.98% (192,000B) 0x400761: _addLinkBefore (linkedList.c:71)
| ->59.98% (192,000B) 0x400A36: addBackList (linkedList.c:194)
|   ->59.98% (192,000B) 0x400C0E: addList (linkedList.c:275)
|     ->59.98% (192,000B) 0x400DD9: main (linkedListMain.c:22)
|       
->00.02% (72B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
  9    514,261,095          345,760          207,456       138,304            0
 10    514,999,399          632,480          379,488       252,992            0
 11  2,051,566,606          640,120          384,072       256,048            0
60.00% (384,072B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->59.99% (384,000B) 0x400761: _addLinkBefore (linkedList.c:71)
| ->59.99% (384,000B) 0x400A36: addBackList (linkedList.c:194)
|   ->59.99% (384,000B) 0x400C0E: addList (linkedList.c:275)
|     ->59.99% (384,000B) 0x400DD9: main (linkedListMain.c:22)
|       
->00.01% (72B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
 12  2,052,780,686           33,040           19,824        13,216            0
60.00% (19,824B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->59.78% (19,752B) 0x400761: _addLinkBefore (linkedList.c:71)
| ->59.78% (19,752B) 0x400A36: addBackList (linkedList.c:194)
|   ->59.78% (19,752B) 0x400C0E: addList (linkedList.c:275)
|     ->59.78% (19,752B) 0x400DD9: main (linkedListMain.c:22)
|       
->00.22% (72B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
 13  2,054,165,054          512,080          307,248       204,832            0
 14  2,054,903,358          798,800          479,280       319,520            0
 15  2,056,103,102        1,264,720          758,832       505,888            0
 16  8,201,234,302        1,280,120          768,072       512,048            0
60.00% (768,072B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->59.99% (768,000B) 0x400761: _addLinkBefore (linkedList.c:71)
| ->59.99% (768,000B) 0x400A36: addBackList (linkedList.c:194)
|   ->59.99% (768,000B) 0x400C0E: addList (linkedList.c:275)
|     ->59.99% (768,000B) 0x400DD9: main (linkedListMain.c:22)
|       
->00.01% (72B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
 17  8,202,803,742          495,360          297,216       198,144            0
 18  8,203,911,564           45,600           27,360        18,240            0
 19  8,205,388,172          619,040          371,424       247,616            0
 20  8,206,864,780        1,192,480          715,488       476,992            0
 21  8,208,341,388        1,765,920        1,059,552       706,368            0
 22  8,209,079,692        2,052,640        1,231,584       821,056            0
 23  8,210,371,724        2,554,400        1,532,640     1,021,760            0
 24 32,788,566,241        2,560,120        1,536,072     1,024,048            0
60.00% (1,536,072B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->60.00% (1,536,000B) 0x400761: _addLinkBefore (linkedList.c:71)
| ->60.00% (1,536,000B) 0x400A36: addBackList (linkedList.c:194)
|   ->60.00% (1,536,000B) 0x400C0E: addList (linkedList.c:275)
|     ->60.00% (1,536,000B) 0x400DD9: main (linkedListMain.c:22)
|       
->00.00% (72B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
 25 32,790,107,681        1,789,360        1,073,616       715,744            0
 26 32,790,910,561        1,387,920          832,752       555,168            0
 27 32,791,713,441          986,480          591,888       394,592            0
 28 32,792,516,321          585,040          351,024       234,016            0
60.00% (351,024B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->59.99% (350,952B) 0x400761: _addLinkBefore (linkedList.c:71)
| ->59.99% (350,952B) 0x400A36: addBackList (linkedList.c:194)
|   ->59.99% (350,952B) 0x400C0E: addList (linkedList.c:275)
|     ->59.99% (350,952B) 0x400DD9: main (linkedListMain.c:22)
|       
->00.01% (72B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
 29 32,793,319,201          183,600          110,160        73,440            0
 30 32,794,122,185          169,360          101,616        67,744            0
 31 32,794,925,173          481,200          288,720       192,480            0
 32 32,795,728,161          793,040          475,824       317,216            0
 33 32,796,531,149        1,104,880          662,928       441,952            0
60.00% (662,928B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->59.99% (662,856B) 0x400761: _addLinkBefore (linkedList.c:71)
| ->59.99% (662,856B) 0x400A36: addBackList (linkedList.c:194)
|   ->59.99% (662,856B) 0x400C0E: addList (linkedList.c:275)
|     ->59.99% (662,856B) 0x400DD9: main (linkedListMain.c:22)
|       
->00.01% (72B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
 34 32,797,334,137        1,416,720          850,032       566,688            0
 35 32,798,137,125        1,728,560        1,037,136       691,424            0
 36 32,798,940,113        2,040,400        1,224,240       816,160            0
 37 32,799,743,101        2,352,240        1,411,344       940,896            0
 38 32,800,546,089        2,664,080        1,598,448     1,065,632            0
60.00% (1,598,448B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->60.00% (1,598,376B) 0x400761: _addLinkBefore (linkedList.c:71)
| ->60.00% (1,598,376B) 0x400A36: addBackList (linkedList.c:194)
|   ->60.00% (1,598,376B) 0x400C0E: addList (linkedList.c:275)
|     ->60.00% (1,598,376B) 0x400DD9: main (linkedListMain.c:22)
|       
->00.00% (72B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
 39 32,801,349,077        2,975,920        1,785,552     1,190,368            0
 40 32,802,152,065        3,287,760        1,972,656     1,315,104            0
 41 32,802,955,053        3,599,600        2,159,760     1,439,840            0
 42 32,803,758,041        3,911,440        2,346,864     1,564,576            0
 43 32,804,561,029        4,223,280        2,533,968     1,689,312            0
60.00% (2,533,968B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->60.00% (2,533,896B) 0x400761: _addLinkBefore (linkedList.c:71)
| ->60.00% (2,533,896B) 0x400A36: addBackList (linkedList.c:194)
|   ->60.00% (2,533,896B) 0x400C0E: addList (linkedList.c:275)
|     ->60.00% (2,533,896B) 0x400DD9: main (linkedListMain.c:22)
|       
->00.00% (72B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
 44 32,805,364,017        4,535,120        2,721,072     1,814,048            0
 45 32,806,769,246        5,080,840        3,048,504     2,032,336            0
 46 131,115,226,408        5,120,120        3,072,072     2,048,048            0
60.00% (3,072,072B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->60.00% (3,072,000B) 0x400761: _addLinkBefore (linkedList.c:71)
| ->60.00% (3,072,000B) 0x400A36: addBackList (linkedList.c:194)
|   ->60.00% (3,072,000B) 0x400C0E: addList (linkedList.c:275)
|     ->60.00% (3,072,000B) 0x400DD9: main (linkedListMain.c:22)
|       
->00.00% (72B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
 47 131,116,029,288        4,718,640        2,831,184     1,887,456            0
 48 131,116,832,168        4,317,200        2,590,320     1,726,880            0
 49 131,117,635,048        3,915,760        2,349,456     1,566,304            0
 50 131,117,835,768        3,815,400        2,289,240     1,526,160            0
 51 131,118,036,488        3,715,040        2,229,024     1,486,016            0
 52 131,118,237,208        3,614,680        2,168,808     1,445,872            0
 53 131,118,437,928        3,514,320        2,108,592     1,405,728            0
 54 131,118,638,648        3,413,960        2,048,376     1,365,584            0
 55 131,118,839,368        3,313,600        1,988,160     1,325,440            0
 56 131,119,040,088        3,213,240        1,927,944     1,285,296            0
 57 131,119,240,808        3,112,880        1,867,728     1,245,152            0
60.00% (1,867,728B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->60.00% (1,867,656B) 0x400761: _addLinkBefore (linkedList.c:71)
| ->60.00% (1,867,656B) 0x400A36: addBackList (linkedList.c:194)
|   ->60.00% (1,867,656B) 0x400C0E: addList (linkedList.c:275)
|     ->60.00% (1,867,656B) 0x400DD9: main (linkedListMain.c:22)
|       
->00.00% (72B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
 58 131,119,441,528        3,012,520        1,807,512     1,205,008            0
 59 131,119,642,248        2,912,160        1,747,296     1,164,864            0
 60 131,119,842,968        2,811,800        1,687,080     1,124,720            0
 61 131,120,043,688        2,711,440        1,626,864     1,084,576            0
 62 131,120,244,408        2,611,080        1,566,648     1,044,432            0
 63 131,120,445,128        2,510,720        1,506,432     1,004,288            0
 64 131,120,645,848        2,410,360        1,446,216       964,144            0
 65 131,120,846,568        2,310,000        1,386,000       924,000            0
 66 131,121,047,288        2,209,640        1,325,784       883,856            0
 67 131,121,248,008        2,109,280        1,265,568       843,712            0
60.00% (1,265,568B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->60.00% (1,265,496B) 0x400761: _addLinkBefore (linkedList.c:71)
| ->60.00% (1,265,496B) 0x400A36: addBackList (linkedList.c:194)
|   ->60.00% (1,265,496B) 0x400C0E: addList (linkedList.c:275)
|     ->60.00% (1,265,496B) 0x400DD9: main (linkedListMain.c:22)
|       
->00.00% (72B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
 68 131,121,448,728        2,008,920        1,205,352       803,568            0
 69 131,121,649,448        1,908,560        1,145,136       763,424            0
 70 131,121,850,168        1,808,200        1,084,920       723,280            0
 71 131,122,050,888        1,707,840        1,024,704       683,136            0
 72 131,122,251,608        1,607,480          964,488       642,992            0
 73 131,122,452,328        1,507,120          904,272       602,848            0
 74 131,122,653,048        1,406,760          844,056       562,704            0
 75 131,122,853,768        1,306,400          783,840       522,560            0
 76 131,123,054,488        1,206,040          723,624       482,416            0
 77 131,123,255,208        1,105,680          663,408       442,272            0
60.00% (663,408B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->59.99% (663,336B) 0x400761: _addLinkBefore (linkedList.c:71)
| ->59.99% (663,336B) 0x400A36: addBackList (linkedList.c:194)
|   ->59.99% (663,336B) 0x400C0E: addList (linkedList.c:275)
|     ->59.99% (663,336B) 0x400DD9: main (linkedListMain.c:22)
|       
->00.01% (72B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
 78 131,123,455,928        1,005,320          603,192       402,128            0
 79 131,123,656,648          904,960          542,976       361,984            0
 80 131,123,857,368          804,600          482,760       321,840            0
 81 131,124,058,088          704,240          422,544       281,696            0
 82 131,124,258,808          603,880          362,328       241,552            0
 83 131,124,459,528          503,520          302,112       201,408            0
 84 131,124,660,248          403,160          241,896       161,264            0
 85 131,124,860,968          302,800          181,680       121,120            0
 86 131,125,061,688          202,440          121,464        80,976            0
 87 131,125,262,408          102,080           61,248        40,832            0
60.00% (61,248B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->59.93% (61,176B) 0x400761: _addLinkBefore (linkedList.c:71)
| ->59.93% (61,176B) 0x400A36: addBackList (linkedList.c:194)
|   ->59.93% (61,176B) 0x400C0E: addList (linkedList.c:275)
|     ->59.93% (61,176B) 0x400DD9: main (linkedListMain.c:22)
|       
->00.07% (72B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
 88 131,125,463,128            1,720            1,032           688            0
